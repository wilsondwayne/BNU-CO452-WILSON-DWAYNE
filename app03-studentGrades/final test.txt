Module module1 = new Module();
module1.print();
Module: null null Mark = 0
Module module1 = new Module("PC", "452");
module1.awardMark(200);
Course course1 = new Course("computing", "G400");
Course course1 = new Course("computing", "G400");
course1.addMark(50, 1);
Student student1 = new Student("dwayne wilson", "22015674");
Course course1 = new Course("computing", "452");
Student student1 = new Student("dwayne wilson", "22015674");
Grades.valueOf("60")
    Exception occurred.
Module module1 = new Module("networking", "60");
Student student = new Student("dwayne wilson", "student");
Course course1 = new Course("networking", "22015674");
course1.print();
Course: networking, code number: 22015674
Module: C0452 Programming Concepts Mark = 0
course1.addMark(50, 50);
course1.print();
Course: networking, code number: 22015674
Module: C0452 Programming Concepts Mark = 0
course1.print();
Course: networking, code number: 22015674
Module: C0452 Programming Concepts Mark = 0
course1.convertTograde(50)
    returned Object C
student.changeName("dwayne");
student.addCredits(10);
student.getCredits()
    returned int 10
student.getLoginName()
    returned String "dwaystu"
student.print();
dwayne, student ID: student, credits: 10
Module module1 = new Module("networking", "C0459");
module1.awardMark(50);
module1.print();
Module: C0459 networking Mark = 50
course1.print();
Course: networking, code number: 22015674
Module: C0452 Programming Concepts Mark = 0
course1.addMark(50, 50);
course1.print();
Course: networking, code number: 22015674
Module: C0452 Programming Concepts Mark = 0
course1.convertTograde(50)
    returned Object C
Grades.values()
    returned Object <object reference>
Grades.valueOf("C")
    returned Object C
student.enrolOnCourse(course1);
student.print();
dwayne, student ID: student, credits: 10
student.addCredits(50);
student.print();
dwayne, student ID: student, credits: 60
